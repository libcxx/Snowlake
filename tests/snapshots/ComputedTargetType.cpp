/**
 * Auto-generated by Snowlake compiler (version 0.1.1).
 */

/**
 * This file was synthesized from /home/x/workspace/Snowlake/tests/./fixtures/computed_target_type.sl
 */

#include "ComputedTargetType.h"
#include "InferenceErrorDefn.h"

/**
 * This method was synthesized from the "MethodStaticDispatch" inference definition.
 */
TypeCls
ComputedTargetType::MethodStaticDispatch(const ASTExpr& StaticMethodCallStmt, std::error_code* err)
{
    // This corresponds to the 1st premise rule in the inference definition.
    TypeCls var0 = getArgumentsTypes();
    TypeCls var1 = proveType(StaticMethodCallStmt.argument_types);
    if (!cmpType(var0, var1, std::equal_to<>())) {
        *err = std::error_code(0, inference_error_category);
        return TypeCls();
    }

    // This corresponds to the 2nd premise rule in the inference definition.
    TypeCls var2 = getParametersTypes();
    TypeCls var3 = proveType(StaticMethodCallStmt.parameter_types);
    if (!cmpType(var2, var3, std::equal_to<>())) {
        *err = std::error_code(0, inference_error_category);
        return TypeCls();
    }

    // This corresponds to the 3rd premise rule in the inference definition.
    TypeCls var4 = getReturnType();
    TypeCls var5 = proveType(StaticMethodCallStmt.return_type);
    if (!cmpType(var4, var5, std::equal_to<>())) {
        *err = std::error_code(0, inference_error_category);
        return TypeCls();
    }

    return getReturnType();
}
