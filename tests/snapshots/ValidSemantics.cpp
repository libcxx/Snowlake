/**
 * Auto-generated by Snowlake compiler (version 0.1.1).
 */

/**
 * This file was synthesized from /home/x/workspace/Snowlake/tests/./fixtures/valid_semantics.sl
 */

#include "ValidSemantics.h"
#include "InferenceErrorDefn.h"

/**
 * This method was synthesized from the "MethodStaticDispatch" inference definition.
 */
TypeCls
ValidSemantics::MethodStaticDispatch(const ASTExpr& StaticMethodCallStmt, std::error_code* err)
{
    // This corresponds to the 1st premise rule in the inference definition.
    std::vector<TypeCls> ArgumentsTypes = proveType(StaticMethodCallStmt.argument_types);

    if (!cmpType(ArgumentsTypes, SELF_TYPE, std::not_equal_to<TypeCls>())) {
        *err = std::error_code(0, inference_error_category);
        return TypeCls();
    }
    return lub(T1, T2);
}
